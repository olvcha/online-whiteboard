{"ast":null,"code":"import { toolTypes } from \"../../constants\";\nimport { getStroke } from \"perfect-freehand\";\nconst drawPencilElement = (context, element) => {\n  const myStroke = getStroke(element.points, {\n    size: 10\n  });\n};\nexport const drawElement = ({\n  roughCanvas,\n  context,\n  element\n}) => {\n  switch (element.type) {\n    case toolTypes.RECTANGLE:\n      return roughCanvas.draw(element.roughElement);\n    case toolTypes.PENCIL:\n      drawPencilElement(contex, element);\n      break;\n    default:\n      throw new Error(\"Something went wrong when drawing element\");\n  }\n};","map":{"version":3,"names":["toolTypes","getStroke","drawPencilElement","context","element","myStroke","points","size","drawElement","roughCanvas","type","RECTANGLE","draw","roughElement","PENCIL","contex","Error"],"sources":["/Users/ola/Repos/online-whiteboard/src/Whiteboard/utils/drawElement.js"],"sourcesContent":["import { toolTypes } from \"../../constants\";\nimport { getStroke } from \"perfect-freehand\"; \n \nconst drawPencilElement = (context, element) => {\n  const myStroke = getStroke(element.points, {\n    size:10,\n  });\n\n};\n\nexport const drawElement = ({ roughCanvas, context, element }) => {\n  switch (element.type) {\n    case toolTypes.RECTANGLE:\n      return roughCanvas.draw(element.roughElement);\n    case toolTypes.PENCIL:\n      drawPencilElement(contex, element);\n      break;\n    default:\n      throw new Error(\"Something went wrong when drawing element\");\n  }\n};\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,iBAAiB;AAC3C,SAASC,SAAS,QAAQ,kBAAkB;AAE5C,MAAMC,iBAAiB,GAAGA,CAACC,OAAO,EAAEC,OAAO,KAAK;EAC9C,MAAMC,QAAQ,GAAGJ,SAAS,CAACG,OAAO,CAACE,MAAM,EAAE;IACzCC,IAAI,EAAC;EACP,CAAC,CAAC;AAEJ,CAAC;AAED,OAAO,MAAMC,WAAW,GAAGA,CAAC;EAAEC,WAAW;EAAEN,OAAO;EAAEC;AAAQ,CAAC,KAAK;EAChE,QAAQA,OAAO,CAACM,IAAI;IAClB,KAAKV,SAAS,CAACW,SAAS;MACtB,OAAOF,WAAW,CAACG,IAAI,CAACR,OAAO,CAACS,YAAY,CAAC;IAC/C,KAAKb,SAAS,CAACc,MAAM;MACnBZ,iBAAiB,CAACa,MAAM,EAAEX,OAAO,CAAC;MAClC;IACF;MACE,MAAM,IAAIY,KAAK,CAAC,2CAA2C,CAAC;EAChE;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}