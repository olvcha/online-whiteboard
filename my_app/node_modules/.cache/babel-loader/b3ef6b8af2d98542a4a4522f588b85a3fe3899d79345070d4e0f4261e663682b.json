{"ast":null,"code":"var _jsxFileName = \"/Users/ola/Repos/online-whiteboard/src/Whiteboard/Whiteboard.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useLayoutEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Menu from \"./Menu\";\nimport rough from \"roughjs/bundled/rough.esm\";\nimport { actions, toolTypes } from \"../constants\";\nimport { createElement, updateElement, drawElement, adjustmentRequired, adjustElementCoordinates } from \"./utils\";\nimport { v4 as uuid } from \"uuid\";\nimport { updateElement as updateElementInStore } from \"./whiteboardSlice\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet selectedElement;\nconst setSelectedElement = el => {\n  selectedElement = el;\n};\nconst Whiteboard = () => {\n  _s();\n  const canvasRef = useRef();\n  const toolType = useSelector(state => state.whiteboard.tool);\n  const elements = useSelector(state => state.whiteboard.elements);\n  const [action, setAction] = useState(null);\n  const dispatch = useDispatch();\n  useLayoutEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext(\"2d\");\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    const roughCanvas = rough.canvas(canvas);\n    elements.forEach(element => {\n      drawElement({\n        roughCanvas,\n        context: ctx,\n        element\n      });\n    });\n  }, [elements]);\n  const handleMouseDown = event => {\n    const {\n      clientX,\n      clientY\n    } = event;\n    console.log(toolType);\n    if (toolType === toolTypes.RECTANGLE || toolType === toolTypes.PENCIL) {\n      setAction(actions.DRAWING);\n    }\n    const element = createElement({\n      x1: clientX,\n      y1: clientY,\n      x2: clientX,\n      y2: clientY,\n      toolType,\n      id: uuid()\n    });\n    setSelectedElement(element);\n    dispatch(updateElementInStore(element));\n  };\n  const handleMouseUp = () => {\n    const selectedElementIndex = elements.findIndex(el => el.id === selectedElement.id);\n    if (selectedElementIndex !== -1) {\n      if (action === actions.DRAWING) {\n        if (adjustmentRequired(elements[selectedElementIndex].type)) {\n          const {\n            x1,\n            y1,\n            x2,\n            y2\n          } = adjustElementCoordinates(elements[selectedElementIndex]);\n          updateElement({\n            id: selectedElement.id,\n            index: selectedElementIndex,\n            x1,\n            x2,\n            y1,\n            y2,\n            type: elements[selectedElementIndex].type\n          }, elements);\n        }\n      }\n    }\n    setAction(null);\n    setSelectedElement(null);\n  };\n  const handleMouseMove = event => {\n    const {\n      clientX,\n      clientY\n    } = event;\n    if (action === actions.DRAWING) {\n      // find index of selected element\n      const index = elements.findIndex(el => el.id === selectedElement.id);\n      if (index !== -1) {\n        updateElement({\n          index,\n          id: elements[index].id,\n          x1: elements[index].x1,\n          y1: elements[index].y1,\n          x2: clientX,\n          y2: clientY,\n          type: elements[index].type\n        }, elements);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Menu, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      onMouseDown: handleMouseDown,\n      onMouseUp: handleMouseUp,\n      onMouseMove: handleMouseMove,\n      ref: canvasRef,\n      width: window.innerWidth,\n      height: window.innerHeight\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(Whiteboard, \"wwfUr4L5RbuED4cgfDaDew/Qnes=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n_c = Whiteboard;\nexport default Whiteboard;\nvar _c;\n$RefreshReg$(_c, \"Whiteboard\");","map":{"version":3,"names":["React","useRef","useLayoutEffect","useState","useSelector","useDispatch","Menu","rough","actions","toolTypes","createElement","updateElement","drawElement","adjustmentRequired","adjustElementCoordinates","v4","uuid","updateElementInStore","jsxDEV","_jsxDEV","Fragment","_Fragment","selectedElement","setSelectedElement","el","Whiteboard","_s","canvasRef","toolType","state","whiteboard","tool","elements","action","setAction","dispatch","canvas","current","ctx","getContext","clearRect","width","height","roughCanvas","forEach","element","context","handleMouseDown","event","clientX","clientY","console","log","RECTANGLE","PENCIL","DRAWING","x1","y1","x2","y2","id","handleMouseUp","selectedElementIndex","findIndex","type","index","handleMouseMove","children","fileName","_jsxFileName","lineNumber","columnNumber","onMouseDown","onMouseUp","onMouseMove","ref","window","innerWidth","innerHeight","_c","$RefreshReg$"],"sources":["/Users/ola/Repos/online-whiteboard/src/Whiteboard/Whiteboard.js"],"sourcesContent":["import React, { useRef, useLayoutEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Menu from \"./Menu\";\nimport rough from \"roughjs/bundled/rough.esm\";\nimport { actions, toolTypes } from \"../constants\";\nimport {\n    createElement,\n    updateElement,\n    drawElement,\n    adjustmentRequired,\n    adjustElementCoordinates,\n} from \"./utils\";\nimport { v4 as uuid } from \"uuid\";\nimport { updateElement as updateElementInStore } from \"./whiteboardSlice\";\n\nlet selectedElement;\n\nconst setSelectedElement = (el) => {\n    selectedElement = el;\n};\n\nconst Whiteboard = () => {\n    const canvasRef = useRef();\n    const toolType = useSelector((state) => state.whiteboard.tool);\n    const elements = useSelector((state) => state.whiteboard.elements);\n\n    const [action, setAction] = useState(null);\n\n    const dispatch = useDispatch();\n\n    useLayoutEffect(() => {\n        const canvas = canvasRef.current;\n        const ctx = canvas.getContext(\"2d\");\n\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n        const roughCanvas = rough.canvas(canvas);\n\n        elements.forEach((element) => {\n            drawElement({ roughCanvas, context: ctx, element });\n        });\n    }, [elements]);\n\n    const handleMouseDown = (event) => {\n        const { clientX, clientY } = event;\n        console.log(toolType);\n\n        if (\n            toolType === toolTypes.RECTANGLE || \n            toolType === toolTypes.PENCIL\n        ) {\n            setAction(actions.DRAWING);\n        }\n\n        const element = createElement({\n            x1: clientX,\n            y1: clientY,\n            x2: clientX,\n            y2: clientY,\n            toolType,\n            id: uuid(),\n        });\n\n        setSelectedElement(element);\n\n        dispatch(updateElementInStore(element));\n    };\n\n    const handleMouseUp = () => {\n        const selectedElementIndex = elements.findIndex(\n            (el) => el.id === selectedElement.id\n        );\n\n        if (selectedElementIndex !== -1) {\n            if (action === actions.DRAWING) {\n                if (adjustmentRequired(elements[selectedElementIndex].type)) {\n                    const { x1, y1, x2, y2 } = adjustElementCoordinates(\n                        elements[selectedElementIndex]\n                    );\n\n                    updateElement(\n                        {\n                            id: selectedElement.id,\n                            index: selectedElementIndex,\n                            x1,\n                            x2,\n                            y1,\n                            y2,\n                            type: elements[selectedElementIndex].type,\n                        },\n                        elements\n                    );\n                }\n            }\n        }\n\n        setAction(null);\n        setSelectedElement(null);\n    };\n\n    const handleMouseMove = (event) => {\n        const { clientX, clientY } = event;\n\n        if (action === actions.DRAWING) {\n            // find index of selected element\n            const index = elements.findIndex((el) => el.id === selectedElement.id);\n\n            if (index !== -1) {\n                updateElement(\n                    {\n                        index,\n                        id: elements[index].id,\n                        x1: elements[index].x1,\n                        y1: elements[index].y1,\n                        x2: clientX,\n                        y2: clientY,\n                        type: elements[index].type,\n                    },\n                    elements\n                );\n            }\n        }\n    };\n\n    return (\n        <>\n            <Menu />\n            <canvas\n                onMouseDown={handleMouseDown}\n                onMouseUp={handleMouseUp}\n                onMouseMove={handleMouseMove}\n                ref={canvasRef}\n                width={window.innerWidth}\n                height={window.innerHeight}\n            />\n        </>\n    );\n};\n\nexport default Whiteboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}