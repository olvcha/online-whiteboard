{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  tool: null,\n  elements: []\n};\nconst whiteboardSlice = createSlice({\n  name: \"whiteboard\",\n  initialState,\n  reducers: {\n    setToolType: (state, action) => {\n      state.tool = action.payload;\n    },\n    updateElement: (state, action) => {\n      const {\n        id\n      } = action.payload;\n      const index = state.elements.findIndex(element => element.id === id);\n      if (index === -1) {\n        state.elements.push(action.payload);\n      } else {\n        // if index will be found\n        // update element in our array of elements\n\n        state.elements[index] = action.payload;\n      }\n    },\n    setElements: (state, action) => {\n      state.elements = action.payload;\n    }\n  }\n});\nexport const {\n  setToolType,\n  updateElement,\n  setElements\n} = whiteboardSlice.actions;\nexport default whiteboardSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","tool","elements","whiteboardSlice","name","reducers","setToolType","state","action","payload","updateElement","id","index","findIndex","element","push","setElements","actions","reducer"],"sources":["/Users/ola/Repos/online-whiteboard/src/Whiteboard/whiteboardSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n    tool: null,\n    elements: [],\n};\n\nconst whiteboardSlice = createSlice({\n    name: \"whiteboard\",\n    initialState,\n    reducers: {\n        setToolType: (state, action) => {\n            state.tool = action.payload;\n        },\n        updateElement: (state, action) => {\n            const { id } = action.payload;\n\n            const index = state.elements.findIndex((element) => element.id === id);\n\n            if (index === -1) {\n                state.elements.push(action.payload);\n            } else {\n                // if index will be found\n                // update element in our array of elements\n\n                state.elements[index] = action.payload;\n           \n            }\n        },\n        setElements: (state, action) => {\n            state.elements = action.payload;\n        },\n    },\n});\n\nexport const { setToolType, updateElement, setElements } =\n    whiteboardSlice.actions;\n\nexport default whiteboardSlice.reducer;\n\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAG;EACjBC,IAAI,EAAE,IAAI;EACVC,QAAQ,EAAE;AACd,CAAC;AAED,MAAMC,eAAe,GAAGJ,WAAW,CAAC;EAChCK,IAAI,EAAE,YAAY;EAClBJ,YAAY;EACZK,QAAQ,EAAE;IACNC,WAAW,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC5BD,KAAK,CAACN,IAAI,GAAGO,MAAM,CAACC,OAAO;IAC/B,CAAC;IACDC,aAAa,EAAEA,CAACH,KAAK,EAAEC,MAAM,KAAK;MAC9B,MAAM;QAAEG;MAAG,CAAC,GAAGH,MAAM,CAACC,OAAO;MAE7B,MAAMG,KAAK,GAAGL,KAAK,CAACL,QAAQ,CAACW,SAAS,CAAEC,OAAO,IAAKA,OAAO,CAACH,EAAE,KAAKA,EAAE,CAAC;MAEtE,IAAIC,KAAK,KAAK,CAAC,CAAC,EAAE;QACdL,KAAK,CAACL,QAAQ,CAACa,IAAI,CAACP,MAAM,CAACC,OAAO,CAAC;MACvC,CAAC,MAAM;QACH;QACA;;QAEAF,KAAK,CAACL,QAAQ,CAACU,KAAK,CAAC,GAAGJ,MAAM,CAACC,OAAO;MAE1C;IACJ,CAAC;IACDO,WAAW,EAAEA,CAACT,KAAK,EAAEC,MAAM,KAAK;MAC5BD,KAAK,CAACL,QAAQ,GAAGM,MAAM,CAACC,OAAO;IACnC;EACJ;AACJ,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEH,WAAW;EAAEI,aAAa;EAAEM;AAAY,CAAC,GACpDb,eAAe,CAACc,OAAO;AAE3B,eAAed,eAAe,CAACe,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}